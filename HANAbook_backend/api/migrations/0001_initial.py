# Generated by Django 3.1.4 on 2021-02-28 00:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_clinic', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('addr_line_1', models.CharField(max_length=255)),
                ('addr_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('addr_postcode', models.CharField(max_length=10)),
                ('addr_state', models.CharField(blank=True, max_length=200, null=True)),
                ('addr_country', models.CharField(default='Singapore', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.user')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('api.user',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.user')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('dob', models.DateField()),
                ('has_disease_1', models.BooleanField(default=False)),
                ('has_disease_2', models.BooleanField(default=False)),
                ('has_disease_3', models.BooleanField(default=False)),
                ('is_priority', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('api.user',),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('specialty', models.CharField(max_length=255)),
                ('clinic', models.ForeignKey(db_column='clinic_name', on_delete=django.db.models.deletion.CASCADE, to='api.clinic', to_field='name')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'available'), ('BOOKED', 'booked'), ('CONFIRMED', 'confirmed')], default='AVAILABLE', max_length=10)),
                ('doctor', models.ForeignKey(blank=True, db_column='doctor_name', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.doctor', to_field='name')),
                ('clinic', models.ForeignKey(db_column='clinic_name', on_delete=django.db.models.deletion.CASCADE, to='api.clinic', to_field='name')),
                ('patient', models.ForeignKey(blank=True, db_column='patient_name', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.patient', to_field='name')),
            ],
        ),
    ]
